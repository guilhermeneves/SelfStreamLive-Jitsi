org.jitsi.videobridge.AUTHORIZED_SOURCE_REGEXP=jvbbrewery@internal.auth.{{ meet_domain }}/{{ hostvars[groups['central'][0]]['jicofo_user'] }}.*$
org.ice4j.ice.harvest.DISABLE_AWS_HARVESTER=true
org.ice4j.ice.harvest.STUN_MAPPING_HARVESTER_ADDRESSES=meet-jit-si-turnrelay.jitsi.net:443
org.jitsi.videobridge.ENABLE_STATISTICS=true
org.jitsi.videobridge.STATISTICS_TRANSPORT=muc
#org.jitsi.videobridge.STATISTICS_INTERVAL=5000
{% if inventory_hostname == groups['central'][0] %}
## Use localhost for prosody's connection in central server...
org.jitsi.videobridge.xmpp.user.shard.HOSTNAME=localhost
{% else %}
## Use central server's default IP otherwise
org.jitsi.videobridge.xmpp.user.shard.HOSTNAME={{ hostvars[groups['central'][0]]['ansible_default_ipv4']['address'] }}
{% endif %}
org.jitsi.videobridge.xmpp.user.shard.DOMAIN=auth.{{ meet_domain }}
org.jitsi.videobridge.xmpp.user.shard.USERNAME={{ videobridge_user }}
org.jitsi.videobridge.xmpp.user.shard.PASSWORD={{ videobridge_pass }}
org.jitsi.videobridge.xmpp.user.shard.MUC_JIDS=jvbbrewery@internal.auth.{{ meet_domain }}
org.jitsi.videobridge.xmpp.user.shard.MUC_NICKNAME={{ videobridge_muc_nick }}
org.jitsi.videobridge.xmpp.user.shard.DISABLE_CERTIFICATE_VERIFICATION=true
{% if octo_enabled is defined and octo_enabled %}

## octo
{% if octo_bind_address is defined %}
org.jitsi.videobridge.octo.BIND_ADDRESS={{ octo_bind_address }}
{% else %}
org.jitsi.videobridge.octo.BIND_ADDRESS={{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}
{% endif %}
{% if octo_public_address is defined %}
# the address to advertise (in case BIND_ADDRESS is not accessible)
org.jitsi.videobridge.octo.PUBLIC_ADDRESS={{ octo_public_address }}
{% endif %}
# the port to bind to
org.jitsi.videobridge.octo.BIND_PORT={{ octo_bind_port }}
# the region that the jitsi-videobridge instance is in
org.jitsi.videobridge.REGION={{ octo_region }}
{% endif %}
